#!/bin/bash
PID=$$
ROOT="${@: -1}" # last argument
test -d "$ROOT" || ! echo "usage: parallel-phpunit [switches] <directory>" || exit 1
ARGS="${@:1:$(($#-1))}" # remove last argument

function test_directories {
  find $ROOT -type d -exec `dirname $0`/directly-contains-testfile {} \; -print -prune
}

function replace {
  echo "$1 " | sed "s|--$2[ ][ ]*[^ ][^ ]*|--$2 $3|"
}

function child_processes {
  ps -o ppid= | sed 's| *||' | grep ^${PID}$ | wc -l
}

function count {
  grep -o "$1" <<< "$progress" | wc -l | sed 's| *||'
}

function print_summary {
  progress=`find $ROOT -name parallel-phpunit.log -exec cat {} \; -exec echo \; | grep "^[\.FESI][\.FESI]*$"`
  progress=$progress`find $ROOT -name parallel-phpunit.log -exec cat {} \; -exec echo \; | grep "^[\.FESI][\.FESI]* " | sed 's| .*||'`
  echo "Success: `count '\.'` Fail: `count F` Error: `count E` Skip: `count S` Incomplete: `count I`"
}

function write_combined_junit {
  mkdir -p `dirname $1`
  echo "<testsuites>" > $1
  find $ROOT -name parallel-phpunit.junit -exec cat {} \; | grep -v "^<?xml" | grep -v testsuites >> $1
  echo "</testsuites>" >> $1
}

trap "ps -o pid=,command= | grep \"parallel-phpunit-pid=${PID} \" | sed 's| .*||' | xargs kill -TERM &> /dev/null" EXIT

echo "Running parallel wrapper for phpunit"
junit_file=`echo "$ARGS" | grep "\-\-log-junit " | sed 's|.*--log-junit [ ]*||' | sed 's| .*||'`
find $ROOT -name parallel-phpunit.* -exec rm {} \; # remove old log files
for dir in `test_directories`
do
  log=$dir/parallel-phpunit.log
  args="`replace "$ARGS" log-junit $dir/parallel-phpunit.junit` $dir"
  echo "Starting command: phpunit $args"
  ((phpunit -d parallel-phpunit-pid=${PID} $args || touch $dir/parallel-phpunit.fail) &> $log; echo "Command ended: phpunit $args"; grep -v "parallel-phpunit-pid=" $log;) &
done

while [ `child_processes` -gt 1 ] # report progress when some phpunit execution is still running
do
  sleep 2
  print_summary
done

test -z "$junit_file" || write_combined_junit $junit_file
test -z "`find $ROOT -name parallel-phpunit.fail`"
